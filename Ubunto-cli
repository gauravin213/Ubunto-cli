#1. Cofigur server on ubuntu 
http://usefulangle.com/post/35/how-to-install-linux-apache-mysql-php-phpmyadmin-lamp-stack-on-ubuntu-16-04

After Installing phpmyadmin 
sudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf
sudo a2enconf phpmyadmin
sudo service apache2 reload


-Check versions
apache2 -v
mysqld --version
php -v
mysql -V

-Install php version 7.2
https://www.rosehosting.com/blog/how-to-install-php-7-2-on-ubuntu-16-04/


#2. Install application 
https://snapcraft.io/store

#3.  Install The nvx for node js:
Site 1: https://www.liquidweb.com/kb/how-to-install-nvm-node-version-manager-for-node-js-on-ubuntu-12-04-lts/
Site 2: https://tecadmin.net/install-nodejs-with-nvm/
nvm use v10.15.0


#4. Install React js
Site:https://www.techomoro.com/how-to-install-and-setup-a-react-app-on-ubuntu-18-04-1/


#5. Check agular js version
Site: https://tecadmin.net/install-angular-on-ubuntu/
npm update toh-pt6

ng serve --open --port 


/*
* Upload project to git hub
*/ 

https://help.github.com/en/articles/adding-an-existing-project-to-github-using-the-command-line

-cd /var/www/html/{ProjectName}

Run the following cpmmand 

-Initialize the local directory as a Git repository.
git init

-Add the files in your new local repository. This stages them for the first commit.
git add .

Commit the files that you've staged in your local repository.
git commit -m "First commit"


-where your local repository will be pushed.
git remote add origin remote repository URL 
git remote add origin https://github.com/gauravin213/laravelblog-v3.git
OR
git remote set-url origin https://github.com/gauravin213/laravelblog-v3.git

-Verifies the new remote URL
git remote -v


-Push the changes in your local repository to GitHub.
git push origin master
git pull origin master

/*
* Upload project to git hub
*/ 

checkout-step-shipping 

<!-- ko foreach: getRegion('amazon-pay-button') -->


/*
* Mysql cli 
*/

Set path  
 
zip rnd -r rnd/



Import database:
mysql -u {user_name} -p {database_name} < {path/dump.sql}

mysql -u root -p contractors-license < contra39_clmage2.sql

mysql -u root -p contractorslicense < /var/www/html/contractorslicense/contra39_clmage2.sql

mysql -u root -p prosport_db_2 < prosport_db.sql



mysql -u root -p contractorslicen_clmage2 < /backup_sql/contra39_clmage2_3.sql



Export database:
mysqldump -u user_name -p database_name > dump.sql

mysqldump -u root -p prosport_db_2 > dump.sql

mysqldump -u prosport_prospor -p prosport_db2 > dump.sql

+{^OU]jnQ;&B


mysql -u root -p 

DROP DATABASE contractors-license;

DROP DATABASE IF EXISTS tutorial_database;

SHOW DATABASES;

mysql> show tables;



CREATE DATABASE tutorial_database;

CREATE DATABASE IF NOT EXISTS tutorial_database;



Download File:
wget http://pubfiles.nexcess.net/magento/ce-packages/magento2-with-samples-2.3.0.tar.gz

/*
* Mysql cli 
*/


/*
* Create zip file
*/
zip -r filename.zip folder







<IfModule mime_module> 
AddType application/x-httpd-ea-php71 .php .php7 .phtml
</IfModule>












php -v

sudo add-apt-repository ppa:ondrej/php

sudo apt-get update

sudo apt-get install php7.1

sudo apt-get install php7.1-cli php7.1-common php7.1-json php7.1-opcache php7.1-mysql php7.1-mbstring php7.1-mcrypt php7.1-zip php7.1-fpm

sudo a2dismod php7.2

sudo a2enmod php7.1

sudo service apache2 restart

sudo a2dismod php7.0

sudo a2enmod php7.1

sudo update-alternatives --set php /usr/bin/php7.2



Run Instaer

- sudo chmod +x Hubstaff-1.5.9-6ca83ce3.sh 

- ./Hubstaff-1.5.9-6ca83ce3.sh
